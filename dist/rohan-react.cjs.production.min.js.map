{"version":3,"file":"rohan-react.cjs.production.min.js","sources":["../src/Spinner/Spinner.tsx","../src/Button/Button.tsx","../src/IconButton/IconButton.tsx","../src/LoadingLine/LoadingLine.tsx"],"sourcesContent":["import React from \"react\"\nimport type { Size } from \"../components.type\"\n\ntype Props = {\n  size?: Size\n  position?: \"static\" | \"absolute\" | \"blockScreen\"\n  align?: \"left\" | \"right\" | \"center\"\n  variant?: \"default\" | \"primary\" | \"secondary\" | \"white\" | \"danger\" | \"info\"\n  text?: string\n  blockScreen?: boolean\n}\n\nconst renderColor = (color: string) => {\n  switch (color) {\n    case \"primary\":\n      return \" border-primary \"\n    case \"secondary\":\n      return \" border-secondary \"\n    case \"white\":\n      return \" border-white \"\n    case \"success\":\n      return \" border-green-600 \"\n    case \"info\":\n      return \" border-blue-600 \"\n    case \"danger\":\n      return \" border-red-600 \"\n\n    default:\n      return \" border-gray-400 dark:border-gray-500 \"\n  }\n}\n\nconst renderAlign = (align: string) => {\n  switch (align) {\n    case \"left\":\n      return \"justify-start\"\n    case \"right\":\n      return \"justify-end\"\n    default:\n      return \"justify-center\"\n  }\n}\n\nconst renderSize = (size: Size) => {\n  switch (size) {\n    case \"sm\":\n      return \"h-4 w-4\"\n    case \"lg\":\n      return \"h-24 w-24\"\n    case \"xl\":\n      return \"h-32 w-32\"\n    default:\n      return \"h-8 w-8\"\n  }\n}\n\nconst renderPosition = (position: string) => {\n  switch (position) {\n    case \"absolute\":\n      return \"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\"\n    case \"blockScreen\":\n      return \"fixed inset-0 flex items-center justify-center \"\n    default:\n      return \"static\"\n  }\n}\n\nexport const Spinner = ({\n  size = \"md\",\n  align = \"center\",\n  position = \"static\",\n  variant = \"default\"\n}: Props) => {\n  return (\n    <div className={`${renderPosition(position)} dark:bg-[#3b3b40]`}>\n      <div className={`${renderAlign(align)} flex items-center`}>\n        <div\n          className={`${renderSize(\n            size\n          )} animate-spin rounded-full border-b-2 ${renderColor(variant)}`}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport classnames from \"classnames\"\nimport { Spinner } from \"../Spinner/Spinner\"\nimport type { Size } from \"../components.type\" \n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  children: React.ReactNode\n  className?: string\n  disabled?: boolean\n  active?: boolean\n  rounded?: boolean\n  variant?: \"default\" | \"primary\" | \"secondary\" | \"black\"\n  modifier?: \"outline\" | \"gosht\" | \"light\" | undefined\n  size?: Size\n  fullwidth?: boolean\n  loading?: boolean\n}\n\ntype renderVaiantProps = {\n  variant: string\n  disabled: boolean\n  modifier: string | undefined\n  active: boolean\n}\n\nconst renderVariant = ({\n  variant,\n  disabled,\n  modifier,\n  active\n}: renderVaiantProps): string => {\n  if (disabled)\n    return \"bg-transparent border-0 dark:bg-primary-gray dark:border-secondary-gray dark:text-muted-text tex-muted-text cursor-not-allowed hover:enabled:shadow-none text-secondary-text\"\n\n  switch (variant) {\n    case \"primary\":\n      if (modifier === \"gosht\") {\n        return \"bg-transparent border-0 text-primary \"\n      } else if (modifier === \"outline\") {\n        return `${\n          active\n            ? \"bg-primary/10 text-primary\"\n            : \"bg-transparent border-primary text-primary\"\n        } hover:bg-primary/5`\n      } else if (modifier === \"light\") {\n        return \"bg-primary/10 border-transparent text-primary shadow-none\"\n      } else {\n        return \"bg-primary text-white border-0 hover:bg-primary/80\"\n      }\n\n    case \"secondary\":\n      if (modifier === \"gosht\") {\n        return \"bg-transparent border-0 text-secondary\"\n      } else if (modifier === \"outline\") {\n        return \"bg-transparent border-secondary text-secondary \"\n      } else if (modifier === \"light\") {\n        return \"bg-secondary/10 border-transparent text-secondary\"\n      } else {\n        return \"bg-secondary border-transparent text-white hover:bg-secondary/90\"\n      }\n\n    case \"black\":\n      if (modifier === \"gosht\") {\n        return \"bg-transparent border-0 text-black\"\n      } else if (modifier === \"outline\") {\n        return `${\n          active ? \"bg-primary text-white\" : \"bg-transparent text-black\"\n        }`\n      } else if (modifier === \"light\") {\n        return \"bg-black/10 border-transparent text-black\"\n      } else {\n        return \"bg-black border-transparent text-white hover:bg-black/80\"\n      }\n\n    default:\n      if (modifier === \"gosht\") {\n        return \"bg-transparent border-transparent uppercase text-primary-text disabled:border-0 disabled:text-secondary-text\"\n      } else if (modifier === \"outline\") {\n        return \"bg-transparent  border-secondary-text text-primary-text\"\n      } else if (modifier === \"light\") {\n        return \"bg-secondary-gray/40 border-transparent text-primary-color text-primary-text\"\n      } else {\n        return \"bg-secondary-gray hover:bg-secondary-gray/80 border-secondary-gray text-primary-text\"\n      }\n  }\n}\n\n// const renderSize = (size: string): string => {\n//   switch (size) {\n//     case \"xs\":\n//       return `text-[.8rem] h-[30px]`\n//     case \"sm\":\n//       return `text-sm h-[32px] `\n//     case \"lg\":\n//       return `text-base h-[44px] `\n//     case \"xl\":\n//       return `text-lg h-[58px] `\n//     default:\n//       return `text-base h-[38px] `\n//   }\n// }\n\nconst Button: React.ForwardRefRenderFunction<HTMLButtonElement, ButtonProps> = (\n  {\n    children,\n    variant = \"default\",\n    modifier = \"\",\n    disabled = false,\n    active = false,\n    size = \"md\",\n    fullwidth = false,\n    loading = false,\n    rounded = false,\n    className = \"\",\n    ...props\n  },\n  ref\n) => {\n\n  const sizes = {\n    xs: \"text-[.8rem] h-[30px]\",\n    sm: \"text-sm h-[32px]\",\n    md: \"text-base h-[38px]\",\n    lg: \"text-base h-[44px]\",\n    xl: \"text-lg h-[58px]\"\n  }\n\n  // const variants = {\n  //   primary: {\n  //     default: `bg-primary text-white border-0 hover:bg-primary/80`,\n  //     outline: `${\n  //         active\n  //           ? \"bg-primary/10 text-primary\"\n  //           : \"bg-transparent border-primary text-primary\"\n  //       } hover:bg-primary/5`,\n  //     gosht: `bg-transparent border-0 text-primary`,\n  //     light: `bg-primary/10 border-transparent text-primary shadow-none`\n  //   },\n  //   secondary: {\n  //     default: `bg-secondary border-transparent text-white hover:bg-secondary/90`,\n  //     outline: ``,\n  //     gosht: ``,\n  //     light: ``\n  //   },\n  //   black: {\n  //     default: ``,\n  //     outline: ``,\n  //     gosht: ``,\n  //     light: ``\n  //   }\n  // }\n\n  return (\n    <button\n      ref={ref}\n      disabled={disabled || loading}\n      className={`\n        relative group uppercase whitespace-nowrap text-center px-3 outline-none transition-all duration-100 active:enabled:scale-95 ${\n          fullwidth ? \"flex w-full\" : \"inline-flex\"\n        } gap-2 items-center justify-center hover:enabled:shadow border focus:ring-4 focus:ring-gray-200 focus:ring-opacity-30 \n        ${renderVariant({ variant, disabled, modifier, active })}\n        ${sizes[size]}\n        ${rounded ? \"rounded-full\" : \"rounded-md\"}\n        ${loading ? \"bg-opacity-60 cursor-not-allowed\" : \"\"}\n        ${className}\n      `}\n      {...props}\n    >\n      <span\n        className={classnames(\n          \"inline-flex items-center gap-2 \",\n          loading && \"opacity-5\"\n        )}\n      >\n        {children}\n      </span>\n\n      {loading && <Spinner position=\"absolute\" size=\"sm\" />}\n    </button>\n  )\n}\n\nexport const ButtonRef = React.forwardRef(Button)\n","import React from \"react\"\nimport { Spinner } from \"../Spinner/Spinner\"\nimport type { Size, Position } from \"../components.type\"\n\ninterface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  children: React.ReactNode\n  className?: string\n  disabled?: boolean\n  active?: boolean\n  variant?: \"default\" | \"primary\" | \"secondary\"\n  modifier?: \"outline\" | \"gosht\" | \"light\" | undefined\n  size?: Size\n  loading?: boolean\n  position?: Position\n}\n\ntype renderVaiantProps = {\n  variant: string\n  disabled: boolean\n  modifier: string | undefined\n  active: boolean\n  \n}\n\nconst renderVariant = ({\n  variant,\n  disabled,\n  modifier,\n  active\n}: renderVaiantProps): string => {\n  if (disabled)\n    return \"bg-gray-100 tex-muted-text cursor-not-allowed hover:shadow-none text-secondary-text\"\n\n  switch (variant) {\n    case \"primary\":\n      if (modifier === \"gosht\") {\n        return \"bg-transparent border-0 text-primary \"\n      } else if (modifier === \"outline\") {\n        return `${\n          active\n            ? \"bg-primary/10 text-primary\"\n            : \"bg-transparent border-primary text-primary\"\n        } hover:bg-primary/5`\n      } else if (modifier === \"light\") {\n        return \"bg-primary/10 border-transparent text-primary shadow-none\"\n      } else {\n        return \"bg-primary text-white border-0 hover:bg-primary/80\"\n      }\n\n    case \"secondary\":\n      if (modifier === \"gosht\") {\n        return \"bg-transparent border-0 text-secondary\"\n      } else if (modifier === \"outline\") {\n        return \"bg-transparent border-secondary text-secondary \"\n      } else if (modifier === \"light\") {\n        return \"bg-secondary/10 border-transparent text-secondary\"\n      } else {\n        return \"bg-secondary border-transparent text-white hover:bg-secondary/90\"\n      }\n\n    case \"black\":\n      if (modifier === \"gosht\") {\n        return \"bg-transparent border-0 text-black\"\n      } else if (modifier === \"outline\") {\n        return `${\n          active ? \"bg-primary text-white\" : \"bg-transparent text-black\"\n        }`\n      } else if (modifier === \"light\") {\n        return \"bg-black/10 border-transparent text-black\"\n      } else {\n        return \"bg-black border-transparent text-white hover:bg-black/80\"\n      }\n\n    default:\n      if (modifier === \"gosht\") {\n        return \"bg-transparent border-transparent uppercase text-primary-text\"\n      } else if (modifier === \"outline\") {\n        return \"bg-transparent  border-secondary-text text-primary-text\"\n      } else if (modifier === \"light\") {\n        return \"bg-secondary-gray/40 border-transparent text-primary-color text-primary-text\"\n      } else {\n        return \"bg-secondary-gray hover:bg-secondary-gray/80 border-secondary-gray text-primary-text\"\n      }\n  }\n}\n\nconst renderSize = (size: string): string => {\n  switch (size) {\n    case \"xs\":\n      return `text-[.8rem] w-[30px] h-[30px]`\n    case \"sm\":\n      return `text-sm h-[32px] w-[32px]`\n    case \"lg\":\n      return `text-base h-[44px] w-[44px]`\n    case \"xl\":\n      return `text-lg h-[50px] w-[50]`\n    default:\n      return `text-base h-[38px] w-[38px]`\n  }\n}\n\nconst IconButton: React.ForwardRefRenderFunction<HTMLButtonElement, Props> = (\n  {\n    children,\n    variant = \"default\",\n    modifier,\n    disabled = false,\n    active = false,\n    size = \"md\",\n    loading = false,\n    position = \"relative\",\n    className = \"\",\n    ...props\n  },\n  ref\n) => {\n  return (\n    <button\n      ref={ref}\n      className={`\n        ${position} rounded-full overflow-hidden  hover:shadow border active:scale-95 transition-all duration-100 focus:ring-4 focus:ring-gray-200 focus:ring-opacity-30  \n        ${renderVariant({ variant, disabled, modifier, active })}\n        \n        ${loading ? \"bg-opacity-50 cursor-not-allowed\" : \"\"}\n        ${className}\n      `}\n      disabled={loading || disabled}\n      {...props}\n    >\n      <span\n        className={`${renderSize(\n          size\n        )} text-center items-center justify-center inline-flex ${\n          loading && \"opacity-5\"\n        }`}\n      >\n        {children}\n      </span>\n      {loading && <Spinner position=\"absolute\" size=\"sm\" />}\n    </button>\n  )\n}\n\nexport const IconButtonRef = React.forwardRef(IconButton)\n\n// export default React.forwardRef(IconButton)\n","import React from \"react\"\nimport type {Position} from \"../components.type\"\n\ntype props = {\n  height?: number\n  position?: Position\n  variant?: \"primary\" | \"default\" | \"secondary\"\n}\n\nexport const LoadingLine = ({\n  height = 2,\n  position = \"fixed\",\n  variant = \"primary\"\n}: props) => {\n  return (\n    <div className={`${position} load-bar top-0 right-0 z-[99999] w-full `}>\n      <span\n        style={{ height: `${height}px` }}\n        className={`animate-loadingbar absolute inline h-full w-0 bg-${variant} rounded-full overflow-hidden`}\n      />\n    </div>\n  )\n}\n"],"names":["renderColor","color","renderAlign","align","renderSize","size","renderPosition","position","Spinner","_ref","_ref$size","_ref$align","_ref$position","_ref$variant","variant","React","className","renderVariant","modifier","active","disabled","Button","_ref2","ref","children","_ref2$variant","_ref2$modifier","_ref2$disabled","_ref2$active","_ref2$size","_ref2$fullwidth","fullwidth","_ref2$loading","loading","_ref2$rounded","rounded","_ref2$className","props","_objectWithoutPropertiesLoose","_excluded","xs","sm","md","lg","xl","classnames","ButtonRef","forwardRef","IconButton","_ref2$position","IconButtonRef","height","style","_ref$height"],"mappings":"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"}